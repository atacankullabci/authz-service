version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: authz-postgres
    environment:
      POSTGRES_DB: authz
      POSTGRES_USER: authz_user
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: authz-redis
    ports:
      - "6379:6379"

  app:
    build: .
    container_name: authz-app
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker

  kafka-broker:
    image: bitnami/kafka:latest
    container_name: kafka-broker
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      # Required for KRaft mode (no ZooKeeper)
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller

      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker:9093

      # General tuning
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CFG_NUM_PARTITIONS: 1

      # Optional but good for local debug
      ALLOW_PLAINTEXT_LISTENER: yes

volumes:
  pgdata:
